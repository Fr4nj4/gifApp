{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","response","useFetchGifs","GiftExpertApp","props","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAoB,EAAnBC,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGnC,OACI,sBAAKC,UAAY,2CAAjB,UACG,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCTFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,0FAE4EO,UAAUF,GAFtF,sBAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCqCLK,EA9BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAGd,ECPyB,SAACA,GAE1B,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WAEPjB,EAAQC,GAAUiB,MAAM,SAAAC,GACpBH,EAAS,CACLT,KAAKY,EACLL,SAAS,SAIlB,CAACb,IAEGc,EDXmBK,CAAanB,GAA/Ba,EAAR,EAAQA,QAASP,EAAjB,EAAiBA,KAGjB,OACI,qCACA,oBAAIV,UAAW,yCAAf,SAAyDI,IACxDa,GAAW,wCACZ,qBAAKjB,UAAU,YAAf,SAGYU,EAAKE,KAAK,SAAAC,GACP,OAAQ,cAAC,EAAD,eAEHA,GADCA,EAAIhB,aEqBlB2B,EAvCO,SAAAC,GAGlB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAaA,OACI,qCACI,iDACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEK4C,EAAWd,KAAK,SAAAe,GACZ,OAAQ,cAAC,EAAD,CACavB,SAAUuB,GAAfA,Y,MC1BrCC,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0fa98de4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value = {inputValue}\r\n                onChange ={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeInUp\">\r\n           <img src={url} alt={title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=YwDh2JO8eYQ2o2X2ntRLJh2dCCaWcga9&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n    \r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    const { loading, data } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className= ' animate__animated animate__fadeInDown'>{category}</h3>\r\n        {loading && <p>Loaging</p>}\r\n        <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map( img => {\r\n                       return (<GifGridItem \r\n                        key={img.id} \r\n                        {...img} />)\r\n                    })\r\n                }\r\n\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport  const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n        });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category).then( response => {\r\n            setstate({\r\n                data:response,\r\n                loading: false\r\n            })\r\n        } );\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = props => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Death note'])\r\n\r\n\r\n    //const handleAdd = ( ) =>{\r\n\r\n        //let categoriesTmp = [...categories];\r\n\r\n        //categoriesTmp.push('Digimon');\r\n        //setCategories(categoriesTmp);\r\n      //  setCategories([...categories,  'Digimon']);\r\n        //setCategories(cats => [...cats, 'Digimon']);\r\n    //};\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert app</h2>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <ol>\r\n                {\r\n                 categories.map( cat => {\r\n                     return (<GifGrid \r\n                                key={cat} category={cat}\r\n                                />)\r\n                 })\r\n                }\r\n            </ol>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GiftExpertApp/>,\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}